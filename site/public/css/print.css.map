{
	"version": 3,
	"file": "print.css",
	"sourceRoot": "/Users/paulkurian/Documents/Projects/greek-room/site",
	"sources": [
		"themes/zen/assets/sass/print.scss",
		"themes/zen/assets/sass/_init.scss",
		"themes/zen/assets/sass/_sass_variables.scss",
		"themes/zen/assets/sass/_extra.scss",
		"themes/zen/assets/sass/mixins/breakpoint/_respond-to.scss",
		"themes/zen/assets/sass/mixins/clearfix/_clearfix.scss",
		"themes/zen/assets/sass/mixins/flex-calc/_flex-calc.scss",
		"themes/zen/assets/sass/mixins/overlay/_overlay.scss",
		"themes/zen/assets/sass/mixins/spacing/_spacing.scss"
	],
	"sourcesContent": [
		"// The print stylesheet for this theme.\n\n@import 'init';\n\n.pager,\n%pager,\n.mobile-nav,\naside,\nnav,\nfooter {\n  display: none;\n}\n\n@media print {\n  html {\n    font-size: var(--print-font-size);\n  }\n\n  html,\n  body,\n  .page {\n    background-color: white;\n    border-color: black;\n    box-shadow: none;\n    color: black;\n  }\n\n  .main {\n    width: 100%;\n  }\n\n  // Underline all links.\n  :link,\n  :visited {\n    text-decoration: underline;\n  }\n\n  // Add visible title after abbreviations.\n  abbr[title] {\n    &::after {\n      content: ' (' attr(title) ')';\n    }\n  }\n}\n",
		"// Initialization partial\n\n// To make it easier to use all variables and mixins in any Sass file in this\n// project, each .scss file has a `@import 'init';` declaration. The _init.scss\n// file is in charge of importing all the other partials needed for the\n// project.\n\n// Variables.\n@import 'sass_variables';\n@import 'extra';\n\n// Mixins and functions.\n@import 'mixins/breakpoint/respond-to';\n@import 'mixins/clearfix/clearfix';\n@import 'mixins/flex-calc/flex-calc';\n@import 'mixins/overlay/overlay';\n@import 'mixins/spacing/spacing';\n",
		"// Variables\n// These need to be sass variables since they are used in sass functions and mixins.\n// Override sass variables in \"assets/sass/_extra.scss\"\n\n// Base line height, unitless.\n$base-line-height: 1.5;\n\n// The font sizes in our type hierarchy as tee shirt sizes.\n// Size m is base.\n// Use like this: var(--fs-m)\n$font-size-fixed: (\n  xxxxl:      3rem,\n  xxxl:       2.5rem,\n  xxl:        2rem,\n  xl:         1.5rem,\n  l:          1.25rem,\n  m:          1rem,\n  s:          0.889rem,\n  xs:         0.778rem,\n);\n\n// The responsive font sizes in our type hierarchy as tee shirt sizes.\n// Size m is base.\n// Use like this: var(--fs-m)\n$font-size-fluid: (\n  xxxxl:      clamp(2.4881rem, calc(1.8896rem + 2.9924vw), 4.2088rem),\n  xxxl:       clamp(2.0738rem, calc(1.6968rem + 1.8848vw), 3.1575rem),\n  xxl:        clamp(1.7281rem, calc(1.5053rem + 1.1141vw), 2.3688rem),\n  xl:         clamp(1.44rem, calc(1.3228rem + 0.5859vw), 1.7769rem),\n  l:          clamp(1.2rem, calc(1.1537rem + 0.2315vw), 1.3331rem),\n  m:          1rem,\n  s:          0.889rem,\n  xs:         0.778rem,\n);\n\n// Set the font sizes to use, fixed or fluid.\n// $font-size: $font-size-fluid;\n$font-size: $font-size-fixed;\n\n// Breakpoints (Deprecated in v5, use css @media directly instead.)\n// Use the `respond-to(s)` mixin to use named breakpoints.\n$breakpoints: (\n  'xxxl':     1222px,\n  'xxl':      1111px,\n  'xl':       999px,\n  'l':        888px,\n  'm':        777px,\n  's':        666px,\n  'xs':       555px,\n  'xxs':      444px,\n  'xxxs':     333px,\n);\n\n// Spacing\n// Generates mt--m (mt = margin-top), mb--m (mb = margin-bottom) and\n// mx--m (mx = margin-block) classes.\n$spacing: (\n  xxl:        3,\n  xl:         2,\n  l:          1.5,\n  m:          1,\n  s:          0.75,\n  xs:         0.5,\n  xxs:        0.3,\n  0:          0,\n);\n\n// The max content width. (Consider using one of the breakpoints.)\n$max-content-width: 1111px;\n\n// The max page width. Defaults to max-content-width.\n// Setting this to a larger value than max-content-width allows\n// content with class \"stretch\" to stretch out to the page edge.\n$max-page-width: $max-content-width;\n",
		"// Add and override variables. This file loads last during init.\n",
		"@mixin respond-to($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n    @media (min-width: map-get($breakpoints, $breakpoint)) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $breakpoint) {\n      @content;\n    }\n  }\n}\n\n@mixin respond-to-max($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n    @media (max-width: map-get($breakpoints, $breakpoint)) {\n      @content;\n    }\n  } @else {\n    @media (max-width: $breakpoint) {\n      @content;\n    }\n  }\n}\n",
		"// clearfix()\n//\n// Allows the bottom of an element to extend to the bottom of all floated\n// children elements. @see http://nicolasgallagher.com/micro-clearfix-hack/\n//\n// We use the micro-clearfix, optimized for use in `@extend` where fewer `&` is\n// better.\n@mixin clearfix() {\n  &::before {\n    content: '';\n    display: table;\n  }\n\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n",
		"@mixin flex($col, $gap) {\n  flex-basis: calc(100% / #{$col} - #{$gap * $base-line-height + 'rem'});\n}\n",
		"@mixin overlay() {\n  --color-overlay: var(--color-black-20);\n  --color-overlay2: var(--color-black-10);\n  border-image: linear-gradient(var(--color-overlay), var(--color-overlay2)) fill 1;\n}\n",
		"@mixin spacing($property, $spacing, $unit) {\n  $converted-list: ();\n\n  @each $x in $spacing {\n    $xunit: $unit;\n\n    @if $x == 0 {\n      $xunit: '';\n    }\n\n    $spacing: #{$x * $base-line-height + $xunit};\n    $converted-list: join($converted-list, $spacing, $separator: space);\n  }\n\n  #{$property}: $converted-list;\n}\n\n@mixin gap($x, $unit: 'rem') {\n  @include spacing(gap, $x, $unit);\n}\n\n@mixin margin($x, $unit: 'rem') {\n  @include spacing(margin, $x, $unit);\n}\n\n@mixin margin-inline($x, $unit: 'rem') {\n  @include spacing(margin-inline, $x, $unit);\n}\n\n@mixin margin-inline-start($x, $unit: 'rem') {\n  @include spacing(margin-inline-start, $x, $unit);\n}\n\n@mixin margin-inline-end($x, $unit: 'rem') {\n  @include spacing(margin-inline-end, $x, $unit);\n}\n\n@mixin margin-block($x, $unit: 'rem') {\n  @include spacing(margin-block, $x, $unit);\n}\n\n@mixin margin-block-start($x, $unit: 'rem') {\n  @include spacing(margin-block-start, $x, $unit);\n}\n\n@mixin margin-block-end($x, $unit: 'rem') {\n  @include spacing(margin-block-end, $x, $unit);\n}\n\n@mixin margin-top($x, $unit: 'rem') {\n  @include spacing(margin-top, $x, $unit);\n}\n\n@mixin margin-bottom($x, $unit: 'rem') {\n  @include spacing(margin-bottom, $x, $unit);\n}\n\n@mixin margin-left($x, $unit: 'rem') {\n  @include spacing(margin-left, $x, $unit);\n}\n\n@mixin margin-right($x, $unit: 'rem') {\n  @include spacing(margin-right, $x, $unit);\n}\n\n@mixin padding($x, $unit: 'rem') {\n  @include spacing(padding, $x, $unit);\n}\n\n@mixin padding-inline($x, $unit: 'rem') {\n  @include spacing(padding-inline, $x, $unit);\n}\n\n@mixin padding-inline-start($x, $unit: 'rem') {\n  @include spacing(padding-inline-start, $x, $unit);\n}\n\n@mixin padding-inline-end($x, $unit: 'rem') {\n  @include spacing(padding-inline-end, $x, $unit);\n}\n\n@mixin padding-block($x, $unit: 'rem') {\n  @include spacing(padding-block, $x, $unit);\n}\n\n@mixin padding-block-start($x, $unit: 'rem') {\n  @include spacing(padding-block-start, $x, $unit);\n}\n\n@mixin padding-block-end($x, $unit: 'rem') {\n  @include spacing(padding-block-end, $x, $unit);\n}\n\n@mixin padding-top($x, $unit: 'rem') {\n  @include spacing(padding-top, $x, $unit);\n}\n\n@mixin padding-bottom($x, $unit: 'rem') {\n  @include spacing(padding-bottom, $x, $unit);\n}\n\n@mixin padding-left($x, $unit: 'rem') {\n  @include spacing(padding-left, $x, $unit);\n}\n\n@mixin padding-right($x, $unit: 'rem') {\n  @include spacing(padding-right, $x, $unit);\n}\n"
	],
	"names": [],
	"mappings": "AAIA,AAAA,MAAM;AAEN,WAAW;AACX,KAAK;AACL,GAAG;AACH,MAAM,CAAC;EACL,OAAO,EAAE,IAAI,GACd;;AAED,MAAM,MACJ;EAAA,AAAA,IAAI,CAAC;IACH,SAAS,EAAE,sBAAsB,GAClC;EAED,AAAA,IAAI;EACJ,IAAI;EACJ,KAAK,CAAC;IACJ,gBAAgB,EAAE,KAAK;IACvB,YAAY,EAAE,KAAK;IACnB,UAAU,EAAE,IAAI;IAChB,KAAK,EAAE,KAAK,GACb;EAED,AAAA,KAAK,CAAC;IACJ,KAAK,EAAE,IAAI,GACZ;GAGA,AAAD,IAAK;GACJ,OAAO,CAAC;IACP,eAAe,EAAE,SAAS,GAC3B;EAGD,AACE,IADE,CAAA,AAAA,KAAC,AAAA,GACA,KAAK,CAAC;IACP,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,GAC9B,EAzBF"
}